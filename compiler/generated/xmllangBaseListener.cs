//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:\Users\User\source\repos\xmllang\xmllang.g4 by ANTLR 4.7.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace xmllang {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IxmllangListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.1")]
[System.CLSCompliant(false)]
public partial class xmllangBaseListener : IxmllangListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="xmllangParser.tale"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTale([NotNull] xmllangParser.TaleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xmllangParser.tale"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTale([NotNull] xmllangParser.TaleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xmllangParser.function_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction_declaration([NotNull] xmllangParser.Function_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xmllangParser.function_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction_declaration([NotNull] xmllangParser.Function_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xmllangParser.empty_stat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEmpty_stat([NotNull] xmllangParser.Empty_statContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xmllangParser.empty_stat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEmpty_stat([NotNull] xmllangParser.Empty_statContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>tag_assignment</c>
	/// labeled alternative in <see cref="xmllangParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTag_assignment([NotNull] xmllangParser.Tag_assignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>tag_assignment</c>
	/// labeled alternative in <see cref="xmllangParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTag_assignment([NotNull] xmllangParser.Tag_assignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>attr_assignment</c>
	/// labeled alternative in <see cref="xmllangParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttr_assignment([NotNull] xmllangParser.Attr_assignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>attr_assignment</c>
	/// labeled alternative in <see cref="xmllangParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttr_assignment([NotNull] xmllangParser.Attr_assignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>primitive_assignment</c>
	/// labeled alternative in <see cref="xmllangParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimitive_assignment([NotNull] xmllangParser.Primitive_assignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>primitive_assignment</c>
	/// labeled alternative in <see cref="xmllangParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimitive_assignment([NotNull] xmllangParser.Primitive_assignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>gen_file</c>
	/// labeled alternative in <see cref="xmllangParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGen_file([NotNull] xmllangParser.Gen_fileContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>gen_file</c>
	/// labeled alternative in <see cref="xmllangParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGen_file([NotNull] xmllangParser.Gen_fileContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>parse_file</c>
	/// labeled alternative in <see cref="xmllangParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParse_file([NotNull] xmllangParser.Parse_fileContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>parse_file</c>
	/// labeled alternative in <see cref="xmllangParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParse_file([NotNull] xmllangParser.Parse_fileContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>add_text</c>
	/// labeled alternative in <see cref="xmllangParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAdd_text([NotNull] xmllangParser.Add_textContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>add_text</c>
	/// labeled alternative in <see cref="xmllangParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAdd_text([NotNull] xmllangParser.Add_textContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>append_tag</c>
	/// labeled alternative in <see cref="xmllangParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAppend_tag([NotNull] xmllangParser.Append_tagContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>append_tag</c>
	/// labeled alternative in <see cref="xmllangParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAppend_tag([NotNull] xmllangParser.Append_tagContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>append_atr</c>
	/// labeled alternative in <see cref="xmllangParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAppend_atr([NotNull] xmllangParser.Append_atrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>append_atr</c>
	/// labeled alternative in <see cref="xmllangParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAppend_atr([NotNull] xmllangParser.Append_atrContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>remove_tag</c>
	/// labeled alternative in <see cref="xmllangParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRemove_tag([NotNull] xmllangParser.Remove_tagContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>remove_tag</c>
	/// labeled alternative in <see cref="xmllangParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRemove_tag([NotNull] xmllangParser.Remove_tagContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>remove_atr</c>
	/// labeled alternative in <see cref="xmllangParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRemove_atr([NotNull] xmllangParser.Remove_atrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>remove_atr</c>
	/// labeled alternative in <see cref="xmllangParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRemove_atr([NotNull] xmllangParser.Remove_atrContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>declare_array</c>
	/// labeled alternative in <see cref="xmllangParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclare_array([NotNull] xmllangParser.Declare_arrayContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>declare_array</c>
	/// labeled alternative in <see cref="xmllangParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclare_array([NotNull] xmllangParser.Declare_arrayContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>for_cycle</c>
	/// labeled alternative in <see cref="xmllangParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFor_cycle([NotNull] xmllangParser.For_cycleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>for_cycle</c>
	/// labeled alternative in <see cref="xmllangParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFor_cycle([NotNull] xmllangParser.For_cycleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>function_call</c>
	/// labeled alternative in <see cref="xmllangParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction_call([NotNull] xmllangParser.Function_callContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>function_call</c>
	/// labeled alternative in <see cref="xmllangParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction_call([NotNull] xmllangParser.Function_callContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>if_declaration</c>
	/// labeled alternative in <see cref="xmllangParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIf_declaration([NotNull] xmllangParser.If_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>if_declaration</c>
	/// labeled alternative in <see cref="xmllangParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIf_declaration([NotNull] xmllangParser.If_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>assign_new_value</c>
	/// labeled alternative in <see cref="xmllangParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssign_new_value([NotNull] xmllangParser.Assign_new_valueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>assign_new_value</c>
	/// labeled alternative in <see cref="xmllangParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssign_new_value([NotNull] xmllangParser.Assign_new_valueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>print</c>
	/// labeled alternative in <see cref="xmllangParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrint([NotNull] xmllangParser.PrintContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>print</c>
	/// labeled alternative in <see cref="xmllangParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrint([NotNull] xmllangParser.PrintContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>estat</c>
	/// labeled alternative in <see cref="xmllangParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEstat([NotNull] xmllangParser.EstatContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>estat</c>
	/// labeled alternative in <see cref="xmllangParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEstat([NotNull] xmllangParser.EstatContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>access_name</c>
	/// labeled alternative in <see cref="xmllangParser.access_info"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAccess_name([NotNull] xmllangParser.Access_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>access_name</c>
	/// labeled alternative in <see cref="xmllangParser.access_info"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAccess_name([NotNull] xmllangParser.Access_nameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>access_text</c>
	/// labeled alternative in <see cref="xmllangParser.access_info"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAccess_text([NotNull] xmllangParser.Access_textContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>access_text</c>
	/// labeled alternative in <see cref="xmllangParser.access_info"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAccess_text([NotNull] xmllangParser.Access_textContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>access_value</c>
	/// labeled alternative in <see cref="xmllangParser.access_info"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAccess_value([NotNull] xmllangParser.Access_valueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>access_value</c>
	/// labeled alternative in <see cref="xmllangParser.access_info"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAccess_value([NotNull] xmllangParser.Access_valueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xmllangParser.primitive_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimitive_value([NotNull] xmllangParser.Primitive_valueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xmllangParser.primitive_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimitive_value([NotNull] xmllangParser.Primitive_valueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>caseId</c>
	/// labeled alternative in <see cref="xmllangParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCaseId([NotNull] xmllangParser.CaseIdContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>caseId</c>
	/// labeled alternative in <see cref="xmllangParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCaseId([NotNull] xmllangParser.CaseIdContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>caseStr</c>
	/// labeled alternative in <see cref="xmllangParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCaseStr([NotNull] xmllangParser.CaseStrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>caseStr</c>
	/// labeled alternative in <see cref="xmllangParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCaseStr([NotNull] xmllangParser.CaseStrContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>caseInt</c>
	/// labeled alternative in <see cref="xmllangParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCaseInt([NotNull] xmllangParser.CaseIntContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>caseInt</c>
	/// labeled alternative in <see cref="xmllangParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCaseInt([NotNull] xmllangParser.CaseIntContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xmllangParser.case_block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCase_block([NotNull] xmllangParser.Case_blockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xmllangParser.case_block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCase_block([NotNull] xmllangParser.Case_blockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xmllangParser.print_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrint_statement([NotNull] xmllangParser.Print_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xmllangParser.print_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrint_statement([NotNull] xmllangParser.Print_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xmllangParser.begin_for"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBegin_for([NotNull] xmllangParser.Begin_forContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xmllangParser.begin_for"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBegin_for([NotNull] xmllangParser.Begin_forContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xmllangParser.end"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnd([NotNull] xmllangParser.EndContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xmllangParser.end"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnd([NotNull] xmllangParser.EndContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xmllangParser.datatype"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDatatype([NotNull] xmllangParser.DatatypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xmllangParser.datatype"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDatatype([NotNull] xmllangParser.DatatypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xmllangParser.primitive"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimitive([NotNull] xmllangParser.PrimitiveContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xmllangParser.primitive"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimitive([NotNull] xmllangParser.PrimitiveContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xmllangParser.function_decl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction_decl([NotNull] xmllangParser.Function_declContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xmllangParser.function_decl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction_decl([NotNull] xmllangParser.Function_declContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xmllangParser.function_args"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction_args([NotNull] xmllangParser.Function_argsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xmllangParser.function_args"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction_args([NotNull] xmllangParser.Function_argsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xmllangParser.begin_if"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBegin_if([NotNull] xmllangParser.Begin_ifContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xmllangParser.begin_if"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBegin_if([NotNull] xmllangParser.Begin_ifContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xmllangParser.comparison"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComparison([NotNull] xmllangParser.ComparisonContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xmllangParser.comparison"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComparison([NotNull] xmllangParser.ComparisonContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xmllangParser.else_thing"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElse_thing([NotNull] xmllangParser.Else_thingContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xmllangParser.else_thing"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElse_thing([NotNull] xmllangParser.Else_thingContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="xmllangParser.switch_stat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitch_stat([NotNull] xmllangParser.Switch_statContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="xmllangParser.switch_stat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitch_stat([NotNull] xmllangParser.Switch_statContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace xmllang
